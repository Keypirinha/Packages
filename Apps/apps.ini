#
# Apps Package configuration file
# More info at http://keypirinha.com
#

[main]
# Plugin's main configuration section.

# Should the plugin catalogs files found in the Start Menu?
# * For convenience, all file types will be referenced (i.e. not only
#   executables)
# * Default: yes
#scan_start_menu = yes

# Should the plugin catalogs files found in the Desktop?
# * For convenience, all file types will be referenced (i.e. not only
#   executables)
# * Default: yes
#scan_desktop = yes

# Should the plugin catalogs executable files pointed by the PATH environment
# variables?
# * The PATHEXT environment variable is used to filter out non-executable files.
# * Default: yes
#scan_env_path = yes

# Extend the PATH by also scanning the specified locations.
# * ANY KIND OF FILES MAY BE REFERENCED WITH THIS SETTING.
# * You can specify several paths by appending new lines.
# * If one of the specified paths is a directory, default behavior is to use the
#   PATHEXT environment variable to match the files to catalog. That is, only
#   executable files will be added to the Catalog.
# * In addition to the standards Windows wildcards "*" (any character, zero or
#   multiple times) and "?" (any character), this setting also accepts the "**"
#   wildcard, which means "scan folders recursively" (the glob.iglob standard
#   Python function is used).
# * CAUTION: scanning directories is a time and resource demanding operation,
#   which can even make you computer quite unresponsive if you do not assign a
#   reasonable value
# * Environment variables are supported the same way you would use them in a
#   Batch script, like in : ${env:MY_ENV_VAR}
# * Windows' Known Folders GUIDs are also supported. The GUID must be prefixed
#   by the '::' sequence (without the quotes).
# * CAUTION: Indentation matters! Subsequent line to "extra_paths =" are
#   considered to be part of the setting only if the indentation is larger than
#   the "extra_paths =" line.
# * Example:
#   * extra_paths = X:\MyDir
#     Catalog every non-hidden executable files (identified by the PATHEXT
#     environment variable), directly located under X:\MyDir (non-recursive)
#   * extra_paths = X:\MyDir\*.lnk
#     Catalog every non-hidden *.lnk files directly located under
#     X:\MyDir (non-recursive)
#   * extra_paths = X:\MyDir\**\
#     RECURSIVELY catalog every non-hidden executable files (identified by the
#     PATHEXT environment variable), located under X:\MyDir and its sub-folders.
#     NOTICE the trailing path separator here!!!
#   * extra_paths = X:\MyDir\**
#     RECURSIVELY catalog every non-hidden files, located under X:\MyDir and
#     its sub-folders.
#   * extra_paths = X:\MyDir\**\*.lnk
#     RECURSIVELY catalog every *.lnk files, located under X:\MyDir and its
#     sub-folders.
#   * extra_paths =
#       C:/an/extra/dir
#       C:/some/extra*/files.ext
#       C:\some\extra*\unknown\*.ext
#       ${env:MY_ENV_VAR}/*
#       D:/base/${env:ANOTHER_ENV_VAR}.*
#       ::{ab5fb87b-7ce2-4f83-915d-550846c9537b}
#       ${var:KNOWNFOLDER_CAMERAROLL}/*.avi
# * Default: no extra path configured
#extra_paths =


[custom_commands]
# Default values for custom commands.
# See the "Custom Commands" part below for more info about this feature.

# How catalog item should be named (display).
# * Every defined custom command (i.e.: each [cmd/*] section) is inserted as a
#   single item into Keypirinha's Catalog.
#   It is possible to define a name mask for them using this setting.
# * Some placeholders are availables:
#   * {cmd_name}: Site's name. For example, the command name of the section
#     "[cmd/MyCmdName]" is "MyCmdName".
#   * {plugin_name}: The name of the plugin (i.e.: "Apps")
# * This is a default value applied to every [cmd/*] sections unless overridden.
# * Default: {cmd_name}
#item_label = {cmd_name}

# Indicates whether custom commands should be stored in Keypirinha's history and
# how, by default.
# * Possible values:
#   * all: indicates that the custom comand name as well as the arguments typed
#     will be stored.
#   * cmd: indicates that only the custom command name will be stored, without
#     the extra arguments.
#   * none: indicates that the custom command must not be remembered at all.
# * This is a default value applied to every [cmd/*] sections unless overridden.
# * Default: cmd
#history_keep = cmd

# Indicates whether plugin should try to detect if the thing to launch is a
# terminal application in which case it will use the global 'terminal' setting
# defined in Keypirinha's configuration file to launch the executable.
# * This is a default value applied to every [cmd/*] sections unless overridden.
# * Default: yes
#auto_terminal = yes


# Custom Commands
#
# As a slightly more flexible port of Launchy's Runner plugin to Keypirinha, the
# "custom commands" feature allows you to predefine some command lines that may
# optionally receive arguments at runtime before being launched.
#
# * Each custom command must be defined in its own [cmd/*] section.
# * Examples:
#     [cmd/Cmd]
#     cmd = cmd /K script.bat {{*}}
#
#     [cmd/Ping]
#     cmd = cmd /K ping -t google.com
#
#     [cmd/Multiple Commands]
#     item_label = Utterly Awesome {cmd_name}
#     cmd =
#         "${var:KNOWNFOLDER_PROGRAMFILES}\BestApp\Ever.exe" {{1}} {{3}}
#         "${var:KNOWNFOLDER_PROGRAMFILES}\WorstApp\Ever.exe" {{q2}}
#         "${var:KNOWNFOLDER_PROGRAMFILES}\KeypirinhaFor\Ever.exe" {{*}}
#         "${var:KNOWNFOLDER_PROGRAMFILES}\KeypirinhaFor\Ever.exe" {{qargs}}
#     auto_terminal = yes
#     history_keep = all
#     enable = yes
#     icon = @${var:KNOWNFOLDER_PROGRAMFILES}\App\run.exe,0
# * Where 'Cmd' and 'Multiple Commands' are the names of your custom commands.
# * Supported settings:
#   * cmd:
#     The command line to launch when item is executed. It must be a valid
#     Windows command line, which means it must be quoted properly.
#     Multiple lines are accepted, as shown in the example, so they all can be
#     launched at once.
#     Arguments placeholders are NOT mandatory.
#   * enable:
#     Indicates to the plugin whether this custom command should be taken into
#     account (yes by default).
#   * history_keep:
#     See the 'history_keep' setting from the [custom_commands] section above.
#   * auto_terminal:
#     See the 'auto_terminal' setting from the [custom_commands] section above.
#   * elevated:
#     A boolean (i.e. "yes" or "no) to indicate if this command be executed with
#     elevated privileges? (default is "no")
#   * item_label:
#     See the 'item_label' setting from the [custom_commands] section above.
#   * icon:
#     The path to the icon to be selected for this command.
# * Placeholders:
#   * Format: "{{x}}"
#   * Where "x" can be:
#     * "*" or "args": all arguments will be inserted
#     * a zero-based positive integer where 1 is the first typed argument, 2 is
#       the second and so on.
#       0 (zero) is a special case and will expand to the resolved path of the
#       executable.
#   * Note that "x" can be prefixed by "q" to indicate argument(s) must be
#     forcefully quoted (example: "{{q1}}" or "{{qargs}}")


[var]
# As in every Keypirinha's configuration file, you may optionally include a
# [var] section to declare variables that you want to reuse anywhere else in
# this file.
#
# Note that the [var] section is inherited, which means that any value defined
# in the main configuration file of the application (i.e.: "Keypirinha.ini") has
# already been made available to this file as well so you do not need to
# duplicate it here unless you want to override it.
#
# REMINDER: For convenience, Keypirinha silently populates this section with
# predefined values that may come handy. Here are some of them: APP_DIR,
# APP_EXE, PROFILE_DIR, PROFILE_DIR_INSTALLED_PACKS, PROFILE_DIR_LIVE_PACKS,
# PROFILE_DIR_USER and the KNOWNFOLDER_* and KNOWNFOLDERGUID_* values.
#
# See the "Configuration" chapter of the documentation for more information.


[env]
# For convenience, Keypirinha populates this [env] section in every loaded
# configuration file so you can easily access to environment variables like
# PATH for example from this file using syntax: ${env:PATH}
#
# If an environment variable happens to be changed while Keypirinha is running
# and this modification impacts current configuration, application and packages
# configuration will be reloaded if needed only.
#
# See the "Configuration" chapter of the documentation for more information.
