#
# Calc Package configuration file
# More info at http://keypirinha.com
#

[main]
# Plugin's main configuration section.

# Should the plugin always try to evaluate your search terms as a mathematical
# expression?
# * If no, you will have to select the '=' catalog item (default name) first
#   before entering the expression to evaluate, or to prepend it using the '='
#   keyword (by default)
# * It can be useful to disable this option so the results list is not
#   "polluted" in case you type a search/keyword that happens to be a valid math
#   expression like "e", "pi", "inf" or "nan".
# * Default: yes
#always_evaluate = yes

# The decimal separator that will be accepted in input and that is used to
# display results.
# * Accepted values (without quotes):
#   * "dot" (the '.' character; default behavior)
#     If this option is chosen, a comma (,) must be used to separate functions
#     arguments.
#     Example: "max(2.3, 4.5, .9)" will output "4.5"
#   * "comma" (the ',' character)
#     If this option is chosen, a semi-colon (;) must be used to separate
#     functions arguments
#     Example: "min(2,3 ; 4,5;,9)" will output "0,9"
#   * "auto"
#     Automatically chooses between "dot" or "comma", depending on user's
#     regional settings. The plugin tries to read the "Decimal symbol" setting
#     from the system and if it's a comma, the "comma" value will be applied.
#     Any other configuration leads "dot" to be applied, including if an error
#     occurred while reading system setting.
# * Default: dot
#decimal_separator = dot

# The preferred rounding precision to use for ONE of the results
# * This plugin outputs several versions of a floating point result so you can
#   choose the best one according to the context of your calculus.
#   This setting applies to only one of them so you'll always be able to get a
#   more precise version of a given result if desired.
# * Note that this setting is intepreted as a MAXIMUM rounding precision, which
#   means that it won't always have to be applied.
#   For example: if your "rounding_precision" value is 4, expression "2.3" will
#   still give "2.3" instead of "2.3000".
# * Accepted values are in the inclusive range [0, 16].
#   An explicitely empty value disable this feature.
#   Default: 5
#rounding_precision = 5

# Automatically perform base conversion on integer results
# * If enabled, Calc will automatically convert an integer result to the
#   decimal, binary, octal and hexadecimal bases and include the values into the
#   results list.
#   Otherwise, the output base defaults to decimal
# * Default: yes
#base_conversion = yes

# The character used for saving a variable may be one of ":>@#$" with the default
# character being ":". Using the default, writing an expression like "100/4:x" 
# will create the variable "x" with the value of 25, and then the expression "a^2"
# will result in 625. Variables can be deleted with the Calc Variables command.
#save_char = :

[currency]
# This section defines the currency output format and behavior

# Currency mode
# * Accepted values (without quotes):
#   * "on"
#     Currency formatted value will always be appended to the list of results,
#     regardless of the type of the result from the evaluated expression.
#   * "float"
#     Currency formatted value will be appended to the list of results, if and
#     only if the result from the evaluated expression is a floating point
#     value.
#     This can limit output noise in SOME cases if you frequently use this
#     plugin only to convert integers for example.
#   * "off"
#     "Currency" feature is off and no additional formatted value will be
#     appended to the list of result.
# * Default: float
#mode = float

# The format to use to display the result
# * Accepted values (without quotes):
#   * "system"
#     Ask the system to format the value. That makes use of your current
#     regional system settings.
#   * "manual"
#     Use the settings below to format the value.
#     This mode is quite limited compared to the countless possible combinations
#     of system configurations, but it allows a constant behavior across several
#     machines in case you use Keypirinha on a USB stick for example.
#format = system

# The character to use as a decimal mark
# * Value must not be empty and does not have to be quoted.
# * Default: "." (dot)
#decimal_separator = "."

# The character to use as a thousand separator
# * Value may be empty and does not have to be quoted.
# * Default: "," (comma)
#thousand_separator = ","

# The number of digits to display after the decimal separator (rounding
# precision).
# * Must be an integer in the range [0, 5]
# * Default: 2
#places = 2


[var]
# As in every Keypirinha's configuration file, you may optionally include a
# [var] section to declare variables that you want to reuse anywhere else in
# this file.
#
# Note that the [var] section is inherited, which means that any value defined
# in the main configuration file (i.e. this file) will be propagated to
# subsequently loaded configuration files (packages' configuration files).
#
# REMINDER: For convenience, Keypirinha silently populates this section with
# predefined values that may come handy. Here are some of them: APP_DRIVE,
# APP_DIR, APP_EXE, APP_ARCH, PROFILE_DIR, PROFILE_DIR_INSTALLED_PACKS,
# PROFILE_DIR_LIVE_PACKS, PROFILE_DIR_USER and the KNOWNFOLDER_* and
# KNOWNFOLDERGUID_* values.
#
# See the "Configuration" chapter of the documentation for more information.


[env]
# For convenience, Keypirinha populates this [env] section in every loaded
# configuration file so you can easily access to environment variables like
# PATH for example from this file using syntax: ${env:PATH}
#
# If an environment variable happens to be changed while Keypirinha is running
# and this modification impacts current configuration, application and packages
# configuration will be reloaded if needed only.
#
# See the "Configuration" chapter of the documentation for more information.
